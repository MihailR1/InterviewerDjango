# Generated by Django 5.0.2 on 2024-02-23 18:27

import Utils.slug
import django.contrib.postgres.indexes
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("Articles", "0001_initial"),
        ("Attempts", "0001_initial"),
        ("Comments", "0001_initial"),
        ("Companies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", Utils.slug.AutoSlugField(populate_from="name", unique=True)),
            ],
            options={
                "verbose_name": "Категории",
                "verbose_name_plural": "Категории",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                ("title", models.CharField(db_index=True, max_length=255, unique=True)),
                ("text", models.TextField(unique=True)),
                ("answer", models.TextField()),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("JUNIOR", "Junior"),
                            ("MIDDLE", "Middle"),
                            ("SENIOR", "Senior"),
                        ],
                        default="JUNIOR",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("MODERATION", "Модерация"),
                            ("PUBLIC", "Опубликован"),
                            ("DECLINED", "Отклонен"),
                        ],
                        default="MODERATION",
                    ),
                ),
                ("slug", Utils.slug.AutoSlugField(populate_from="title", unique=True)),
                (
                    "article",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Articles.article",
                    ),
                ),
                ("categories", models.ManyToManyField(to="Questions.category")),
                (
                    "comments",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Comments.comment",
                    ),
                ),
                ("companies", models.ManyToManyField(to="Companies.company")),
                (
                    "user_id",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
            },
        ),
        migrations.CreateModel(
            name="QuestionStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                ("views", models.PositiveSmallIntegerField()),
                ("got_at_interview", models.PositiveSmallIntegerField()),
                (
                    "answers",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Attempts.answer",
                    ),
                ),
                (
                    "question_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Questions.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Статистика по вопросу",
                "verbose_name_plural": "Статистика по вопросу",
            },
        ),
        migrations.AddIndex(
            model_name="question",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["text"], name="Questions_q_text_781b67_gin"
            ),
        ),
    ]
